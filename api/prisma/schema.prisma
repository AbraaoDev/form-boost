generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(cuid(2))
  name         String?
  email        String   @unique
  passwordHash String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  tokens          Token[]
  forms           Form[]
  formSubmissions FormSubmission[]

  @@map("users")
}

enum TokenType {
  PASSWORD_RECOVER
}

model Token {
  id        String    @id @default(cuid(2))
  type      TokenType
  createdAt DateTime  @default(now())

  user   User   @relation(fields: [userId], references: [id])
  userId String

  @@map("tokens")
}

model Form {
  id          String    @id @default(cuid(2))
  name        String    @db.VarChar(255)
  description String?   @db.VarChar(500)
  isActive    Boolean   @default(true)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  deletedAt   DateTime?
  userDeleted String?
  protected   Boolean   @default(false)

  owner       User             @relation(fields: [userId], references: [id])
  userId      String
  versions    VersionSchema[]
  submissions FormSubmission[]

  @@map("forms")
}

model VersionSchema {
  id             String   @id @default(cuid(2))
  fields         Json
  schema_version String
  createdAt      DateTime @default(now())

  form   Form   @relation(fields: [formId], references: [id])
  formId String

  @@map("version_schemas")
}

model FormSubmission {
  id          String    @id @default(cuid(2))
  data        Json
  isActive    Boolean   @default(true)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  deletedAt   DateTime?
  userDeleted String?

  form   Form   @relation(fields: [formId], references: [id])
  formId String
  user   User   @relation(fields: [userId], references: [id])
  userId String

  @@map("form_submissions")
}
